Option Explicit

Dim Chemicals As Collection ' Collection to hold all chemical data

' Load data from a CSV file into a sheet
Sub LoadCSV()
    Dim filePath As String
    Dim fileContent As String
    Dim rows As Variant
    Dim cols As Variant
    Dim i As Long
    Dim ws As Worksheet
    Dim chemical As Chemical

    ' Prompt user to select a CSV file
    filePath = Application.GetOpenFilename("CSV Files (*.csv), *.csv", , "Select a CSV File")
    If filePath = "False" Then Exit Sub

    ' Read file content
    fileContent = ReadFile(filePath)
    rows = Split(fileContent, vbNewLine)

    ' Initialize the Chemicals collection
    Set Chemicals = New Collection

    ' Get the first worksheet for display
    Set ws = ThisWorkbook.Sheets(1)
    ws.Cells.ClearContents
    ws.Range("A1:F1").Value = Array("Code", "Natural", "CAS#", "Parts", "Cost", "Latest Date")

    ' Loop through rows (skip the header row)
    For i = 1 To UBound(rows)
        If Trim(rows(i)) <> "" Then
            cols = Split(rows(i), ",")
            
            ' Create a new chemical object and populate it
            Set chemical = New Chemical
            chemical.Code = cols(0)
            chemical.Natural = CBool(cols(1))
            chemical.CAS = cols(2)
            chemical.Parts = CLng(cols(3))
            chemical.Cost = CDbl(cols(4))
            chemical.LatestDate = CDate(cols(5))

            ' Add to the Chemicals collection
            Chemicals.Add chemical

            ' Write to the sheet
            ws.Cells(i + 1, 1).Resize(1, 6).Value = Array( _
                chemical.Code, chemical.Natural, chemical.CAS, chemical.Parts, chemical.Cost, chemical.LatestDate)
        End If
    Next i

    MsgBox "CSV loaded successfully! " & Chemicals.Count & " items loaded.", vbInformation
End Sub

' Run command to calculate total cost and natural percentage
Sub RunCommand()
    Dim totalCost As Double
    Dim totalParts As Long
    Dim naturalParts As Long
    Dim naturalPercentage As Double
    Dim chemical As Chemical
    Dim ws As Worksheet

    ' Ensure data is loaded
    If Chemicals Is Nothing Or Chemicals.Count = 0 Then
        MsgBox "No data available. Please load a CSV file first.", vbExclamation
        Exit Sub
    End If

    ' Loop through the chemicals collection
    For Each chemical In Chemicals
        totalCost = totalCost + chemical.Cost
        totalParts = totalParts + chemical.Parts
        If chemical.Natural Then
            naturalParts = naturalParts + chemical.Parts
        End If
    Next chemical

    ' Calculate natural percentage
    If totalParts > 0 Then
        naturalPercentage = (naturalParts / totalParts) * 100
    Else
        naturalPercentage = 0
    End If

    ' Output results on the first worksheet
    Set ws = ThisWorkbook.Sheets(1)
    ws.Cells(1, 8).Value = "Results"
    ws.Cells(2, 8).Value = "Total Cost:"
    ws.Cells(2, 9).Value = totalCost
    ws.Cells(3, 8).Value = "Natural Percentage:"
    ws.Cells(3, 9).Value = naturalPercentage & "%"
    ws.Cells(4, 8).Value = "Above 80% Natural:"
    ws.Cells(4, 9).Value = IIf(naturalPercentage > 80, "Yes", "No")

    MsgBox "Command executed successfully!", vbInformation
End Sub

' Helper function to read file content
Function ReadFile(filePath As String) As String
    Dim fileNumber As Integer
    Dim fileContent As String

    fileNumber = FreeFile
    Open filePath For Input As #fileNumber
    fileContent = Input$(LOF(fileNumber), fileNumber)
    Close #fileNumber

    ReadFile = fileContent
End Function